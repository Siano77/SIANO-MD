mkdir md-bot && cd md-bot
npm init -y
md-bot/
â”‚â”€â”€ package.json
â”‚â”€â”€ .gitignore
â”‚â”€â”€ .env.example
â”‚â”€â”€ README.md
â”‚â”€â”€ Procfile                 # optional (Heroku-style)
â”‚â”€â”€ Dockerfile               # optional (Docker/VPS)
â”‚
â””â”€â”€ src/
    â”‚â”€â”€ index.js
    â”‚â”€â”€ handler.js
    â”‚
    â”œâ”€â”€ utils/
    â”‚   â”œâ”€â”€ config.js
    â”‚   â”œâ”€â”€ store.js
    â”‚   â”œâ”€â”€ spamGuard.js
    â”‚   â””â”€â”€ moderation.js
    â”‚
    â””â”€â”€ commands/
        â”œâ”€â”€ help.js
        â”œâ”€â”€ fun.js
        â”œâ”€â”€ media.js
        â”œâ”€â”€ admin.js
        â”œâ”€â”€ welcome.js
{
  "name": "Siano-MD",
  "version": "1.0.0",
  "description": "Wake Up To Reality ðŸ’¥",
  "main": "src/index.js",
  "type": "commonjs",
  "license": "MIT",
  "scripts": {
    "start": "node src/index.js"
  },
  "dependencies": {
    "@whiskeysockets/baileys": "^6.7.7",
    "axios": "^1.7.4",
    "dotenv": "^16.4.5",
    "pino": "^9.3.2",
    "ytdl-core": "^4.11.5",
    "yt-search": "^2.10.6"
  }
}
node_modules
.env
session/
data/
PREFIX=#
OWNER_NUMBER=2347043387336
BOT_NAME=SIANO-MD
require('dotenv').config()
const pino = require('pino')
const { default: makeWASocket, useMultiFileAuthState, fetchLatestBaileysVersion, downloadMediaMessage } = require('@whiskeysockets/baileys')
const handleMessage = require('./handler')
const { getGroupSettings, ensureStore } = require('./utils/store')
const { handleAntiLinkOnMessage } = require('./utils/moderation')

const logger = pino({ level: 'info' })

async function start() {
  ensureStore()
  const { state, saveCreds } = await useMultiFileAuthState('session')
  const { version } = await fetchLatestBaileysVersion()

  const sock = makeWASocket({ version, logger, auth: state, printQRInTerminal: true })
  sock.ev.on('creds.update', saveCreds)

  // Main message pipeline
  sock.ev.on('messages.upsert', async ({ messages }) => {
    const m = messages[0]
    if (!m || !m.message) return

    // Antiâ€‘link moderation for all texts
    try { await handleAntiLinkOnMessage(sock, m) } catch (e) { logger.warn({ e }, 'antilink check failed') }

    // Commands
    try { await handleMessage(sock, m) } catch (e) { logger.error({ e }, 'handler failed') }
  })

  // Welcome messages
  sock.ev.on('group-participants.update', async (update) => {
    try {
      const chat = update.id
      const settings = getGroupSettings(chat)
      if (!settings.welcome || update.action !== 'add') return
      const user = update.participants[0]
      const text = (settings.welcomeText || 'Welcome to the group, @user ðŸŽ‰').replace(/@user/g, `@${user.split('@')[0]}`)
      await sock.sendMessage(chat, { text, mentions: [user] })
    } catch (e) { logger.warn({ e }, 'welcome failed') }
  })
}

start()
